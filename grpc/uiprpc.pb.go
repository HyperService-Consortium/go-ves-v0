// Code generated by protoc-gen-go. DO NOT EDIT.
// source: uiprpc.proto

package uiprpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OpIntents struct {
	Contents             [][]byte `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"`
	Dependencies         [][]byte `protobuf:"bytes,2,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpIntents) Reset()         { *m = OpIntents{} }
func (m *OpIntents) String() string { return proto.CompactTextString(m) }
func (*OpIntents) ProtoMessage()    {}
func (*OpIntents) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{0}
}

func (m *OpIntents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpIntents.Unmarshal(m, b)
}
func (m *OpIntents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpIntents.Marshal(b, m, deterministic)
}
func (m *OpIntents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpIntents.Merge(m, src)
}
func (m *OpIntents) XXX_Size() int {
	return xxx_messageInfo_OpIntents.Size(m)
}
func (m *OpIntents) XXX_DiscardUnknown() {
	xxx_messageInfo_OpIntents.DiscardUnknown(m)
}

var xxx_messageInfo_OpIntents proto.InternalMessageInfo

func (m *OpIntents) GetContents() [][]byte {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *OpIntents) GetDependencies() [][]byte {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

type Transaction struct {
	ChainType            uint32   `protobuf:"varint,1,opt,name=chain_type,json=chainType,proto3" json:"chain_type,omitempty"`
	Src                  []byte   `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	Dst                  []byte   `protobuf:"bytes,3,opt,name=dst,proto3" json:"dst,omitempty"`
	Domain               []byte   `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Meta                 []byte   `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{1}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetChainType() uint32 {
	if m != nil {
		return m.ChainType
	}
	return 0
}

func (m *Transaction) GetSrc() []byte {
	if m != nil {
		return m.Src
	}
	return nil
}

func (m *Transaction) GetDst() []byte {
	if m != nil {
		return m.Dst
	}
	return nil
}

func (m *Transaction) GetDomain() []byte {
	if m != nil {
		return m.Domain
	}
	return nil
}

func (m *Transaction) GetMeta() []byte {
	if m != nil {
		return m.Meta
	}
	return nil
}

type Signature struct {
	SignatureType        uint32   `protobuf:"varint,1,opt,name=signature_type,json=signatureType,proto3" json:"signature_type,omitempty"`
	Content              []byte   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{2}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetSignatureType() uint32 {
	if m != nil {
		return m.SignatureType
	}
	return 0
}

func (m *Signature) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type Attestation struct {
	Tid                  uint32       `protobuf:"varint,1,opt,name=tid,proto3" json:"tid,omitempty"`
	Content              []byte       `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Signature            []*Signature `protobuf:"bytes,3,rep,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Attestation) Reset()         { *m = Attestation{} }
func (m *Attestation) String() string { return proto.CompactTextString(m) }
func (*Attestation) ProtoMessage()    {}
func (*Attestation) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{3}
}

func (m *Attestation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attestation.Unmarshal(m, b)
}
func (m *Attestation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attestation.Marshal(b, m, deterministic)
}
func (m *Attestation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attestation.Merge(m, src)
}
func (m *Attestation) XXX_Size() int {
	return xxx_messageInfo_Attestation.Size(m)
}
func (m *Attestation) XXX_DiscardUnknown() {
	xxx_messageInfo_Attestation.DiscardUnknown(m)
}

var xxx_messageInfo_Attestation proto.InternalMessageInfo

func (m *Attestation) GetTid() uint32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *Attestation) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Attestation) GetSignature() []*Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type SessionStartRequest struct {
	Opintents            *OpIntents `protobuf:"bytes,1,opt,name=opintents,proto3" json:"opintents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SessionStartRequest) Reset()         { *m = SessionStartRequest{} }
func (m *SessionStartRequest) String() string { return proto.CompactTextString(m) }
func (*SessionStartRequest) ProtoMessage()    {}
func (*SessionStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{4}
}

func (m *SessionStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionStartRequest.Unmarshal(m, b)
}
func (m *SessionStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionStartRequest.Marshal(b, m, deterministic)
}
func (m *SessionStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionStartRequest.Merge(m, src)
}
func (m *SessionStartRequest) XXX_Size() int {
	return xxx_messageInfo_SessionStartRequest.Size(m)
}
func (m *SessionStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionStartRequest proto.InternalMessageInfo

func (m *SessionStartRequest) GetOpintents() *OpIntents {
	if m != nil {
		return m.Opintents
	}
	return nil
}

type SessionStartReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionStartReply) Reset()         { *m = SessionStartReply{} }
func (m *SessionStartReply) String() string { return proto.CompactTextString(m) }
func (*SessionStartReply) ProtoMessage()    {}
func (*SessionStartReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{5}
}

func (m *SessionStartReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionStartReply.Unmarshal(m, b)
}
func (m *SessionStartReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionStartReply.Marshal(b, m, deterministic)
}
func (m *SessionStartReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionStartReply.Merge(m, src)
}
func (m *SessionStartReply) XXX_Size() int {
	return xxx_messageInfo_SessionStartReply.Size(m)
}
func (m *SessionStartReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionStartReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionStartReply proto.InternalMessageInfo

func (m *SessionStartReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SessionStartReply) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type SessionAckForInitRequest struct {
	// isc_address
	SessionId            []byte     `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserAddress          []byte     `protobuf:"bytes,2,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`
	UserSignature        *Signature `protobuf:"bytes,3,opt,name=user_signature,json=userSignature,proto3" json:"user_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SessionAckForInitRequest) Reset()         { *m = SessionAckForInitRequest{} }
func (m *SessionAckForInitRequest) String() string { return proto.CompactTextString(m) }
func (*SessionAckForInitRequest) ProtoMessage()    {}
func (*SessionAckForInitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{6}
}

func (m *SessionAckForInitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionAckForInitRequest.Unmarshal(m, b)
}
func (m *SessionAckForInitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionAckForInitRequest.Marshal(b, m, deterministic)
}
func (m *SessionAckForInitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionAckForInitRequest.Merge(m, src)
}
func (m *SessionAckForInitRequest) XXX_Size() int {
	return xxx_messageInfo_SessionAckForInitRequest.Size(m)
}
func (m *SessionAckForInitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionAckForInitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionAckForInitRequest proto.InternalMessageInfo

func (m *SessionAckForInitRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *SessionAckForInitRequest) GetUserAddress() []byte {
	if m != nil {
		return m.UserAddress
	}
	return nil
}

func (m *SessionAckForInitRequest) GetUserSignature() *Signature {
	if m != nil {
		return m.UserSignature
	}
	return nil
}

type SessionAckForInitReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionAckForInitReply) Reset()         { *m = SessionAckForInitReply{} }
func (m *SessionAckForInitReply) String() string { return proto.CompactTextString(m) }
func (*SessionAckForInitReply) ProtoMessage()    {}
func (*SessionAckForInitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{7}
}

func (m *SessionAckForInitReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionAckForInitReply.Unmarshal(m, b)
}
func (m *SessionAckForInitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionAckForInitReply.Marshal(b, m, deterministic)
}
func (m *SessionAckForInitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionAckForInitReply.Merge(m, src)
}
func (m *SessionAckForInitReply) XXX_Size() int {
	return xxx_messageInfo_SessionAckForInitReply.Size(m)
}
func (m *SessionAckForInitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionAckForInitReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionAckForInitReply proto.InternalMessageInfo

func (m *SessionAckForInitReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SessionAckForInitReply) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type SessionFinishedRequest struct {
	// isc_address
	SessionId            []byte   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	IscState             uint32   `protobuf:"varint,2,opt,name=isc_state,json=iscState,proto3" json:"isc_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionFinishedRequest) Reset()         { *m = SessionFinishedRequest{} }
func (m *SessionFinishedRequest) String() string { return proto.CompactTextString(m) }
func (*SessionFinishedRequest) ProtoMessage()    {}
func (*SessionFinishedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{8}
}

func (m *SessionFinishedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionFinishedRequest.Unmarshal(m, b)
}
func (m *SessionFinishedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionFinishedRequest.Marshal(b, m, deterministic)
}
func (m *SessionFinishedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionFinishedRequest.Merge(m, src)
}
func (m *SessionFinishedRequest) XXX_Size() int {
	return xxx_messageInfo_SessionFinishedRequest.Size(m)
}
func (m *SessionFinishedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionFinishedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionFinishedRequest proto.InternalMessageInfo

func (m *SessionFinishedRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *SessionFinishedRequest) GetIscState() uint32 {
	if m != nil {
		return m.IscState
	}
	return 0
}

type SessionFinishedReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionFinishedReply) Reset()         { *m = SessionFinishedReply{} }
func (m *SessionFinishedReply) String() string { return proto.CompactTextString(m) }
func (*SessionFinishedReply) ProtoMessage()    {}
func (*SessionFinishedReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{9}
}

func (m *SessionFinishedReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionFinishedReply.Unmarshal(m, b)
}
func (m *SessionFinishedReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionFinishedReply.Marshal(b, m, deterministic)
}
func (m *SessionFinishedReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionFinishedReply.Merge(m, src)
}
func (m *SessionFinishedReply) XXX_Size() int {
	return xxx_messageInfo_SessionFinishedReply.Size(m)
}
func (m *SessionFinishedReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionFinishedReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionFinishedReply proto.InternalMessageInfo

func (m *SessionFinishedReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SessionFinishedReply) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type SessionRequestForInitRequest struct {
	// isc_address
	SessionId            []byte   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	IscState             uint32   `protobuf:"varint,2,opt,name=isc_state,json=iscState,proto3" json:"isc_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequestForInitRequest) Reset()         { *m = SessionRequestForInitRequest{} }
func (m *SessionRequestForInitRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequestForInitRequest) ProtoMessage()    {}
func (*SessionRequestForInitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{10}
}

func (m *SessionRequestForInitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequestForInitRequest.Unmarshal(m, b)
}
func (m *SessionRequestForInitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequestForInitRequest.Marshal(b, m, deterministic)
}
func (m *SessionRequestForInitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequestForInitRequest.Merge(m, src)
}
func (m *SessionRequestForInitRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequestForInitRequest.Size(m)
}
func (m *SessionRequestForInitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequestForInitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequestForInitRequest proto.InternalMessageInfo

func (m *SessionRequestForInitRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *SessionRequestForInitRequest) GetIscState() uint32 {
	if m != nil {
		return m.IscState
	}
	return 0
}

type SessionRequestForInitReply struct {
	Opintents            [][]byte `protobuf:"bytes,1,rep,name=opintents,proto3" json:"opintents,omitempty"`
	Dependencies         [][]byte `protobuf:"bytes,2,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequestForInitReply) Reset()         { *m = SessionRequestForInitReply{} }
func (m *SessionRequestForInitReply) String() string { return proto.CompactTextString(m) }
func (*SessionRequestForInitReply) ProtoMessage()    {}
func (*SessionRequestForInitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{11}
}

func (m *SessionRequestForInitReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequestForInitReply.Unmarshal(m, b)
}
func (m *SessionRequestForInitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequestForInitReply.Marshal(b, m, deterministic)
}
func (m *SessionRequestForInitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequestForInitReply.Merge(m, src)
}
func (m *SessionRequestForInitReply) XXX_Size() int {
	return xxx_messageInfo_SessionRequestForInitReply.Size(m)
}
func (m *SessionRequestForInitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequestForInitReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequestForInitReply proto.InternalMessageInfo

func (m *SessionRequestForInitReply) GetOpintents() [][]byte {
	if m != nil {
		return m.Opintents
	}
	return nil
}

func (m *SessionRequestForInitReply) GetDependencies() [][]byte {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

type SessionRequireTransactRequest struct {
	// isc_address
	SessionId            []byte       `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Tx                   *Transaction `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SessionRequireTransactRequest) Reset()         { *m = SessionRequireTransactRequest{} }
func (m *SessionRequireTransactRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequireTransactRequest) ProtoMessage()    {}
func (*SessionRequireTransactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{12}
}

func (m *SessionRequireTransactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequireTransactRequest.Unmarshal(m, b)
}
func (m *SessionRequireTransactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequireTransactRequest.Marshal(b, m, deterministic)
}
func (m *SessionRequireTransactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequireTransactRequest.Merge(m, src)
}
func (m *SessionRequireTransactRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequireTransactRequest.Size(m)
}
func (m *SessionRequireTransactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequireTransactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequireTransactRequest proto.InternalMessageInfo

func (m *SessionRequireTransactRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *SessionRequireTransactRequest) GetTx() *Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

type SessionRequireTransactReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequireTransactReply) Reset()         { *m = SessionRequireTransactReply{} }
func (m *SessionRequireTransactReply) String() string { return proto.CompactTextString(m) }
func (*SessionRequireTransactReply) ProtoMessage()    {}
func (*SessionRequireTransactReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{13}
}

func (m *SessionRequireTransactReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequireTransactReply.Unmarshal(m, b)
}
func (m *SessionRequireTransactReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequireTransactReply.Marshal(b, m, deterministic)
}
func (m *SessionRequireTransactReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequireTransactReply.Merge(m, src)
}
func (m *SessionRequireTransactReply) XXX_Size() int {
	return xxx_messageInfo_SessionRequireTransactReply.Size(m)
}
func (m *SessionRequireTransactReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequireTransactReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequireTransactReply proto.InternalMessageInfo

func (m *SessionRequireTransactReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SessionRequireTransactReply) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type AttestationReceiveRequest struct {
	// isc_address
	SessionId            []byte       `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Atte                 *Attestation `protobuf:"bytes,2,opt,name=atte,proto3" json:"atte,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AttestationReceiveRequest) Reset()         { *m = AttestationReceiveRequest{} }
func (m *AttestationReceiveRequest) String() string { return proto.CompactTextString(m) }
func (*AttestationReceiveRequest) ProtoMessage()    {}
func (*AttestationReceiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{14}
}

func (m *AttestationReceiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestationReceiveRequest.Unmarshal(m, b)
}
func (m *AttestationReceiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestationReceiveRequest.Marshal(b, m, deterministic)
}
func (m *AttestationReceiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationReceiveRequest.Merge(m, src)
}
func (m *AttestationReceiveRequest) XXX_Size() int {
	return xxx_messageInfo_AttestationReceiveRequest.Size(m)
}
func (m *AttestationReceiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationReceiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationReceiveRequest proto.InternalMessageInfo

func (m *AttestationReceiveRequest) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *AttestationReceiveRequest) GetAtte() *Attestation {
	if m != nil {
		return m.Atte
	}
	return nil
}

type AttestationReceiveReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttestationReceiveReply) Reset()         { *m = AttestationReceiveReply{} }
func (m *AttestationReceiveReply) String() string { return proto.CompactTextString(m) }
func (*AttestationReceiveReply) ProtoMessage()    {}
func (*AttestationReceiveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65695cb26327d0ea, []int{15}
}

func (m *AttestationReceiveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestationReceiveReply.Unmarshal(m, b)
}
func (m *AttestationReceiveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestationReceiveReply.Marshal(b, m, deterministic)
}
func (m *AttestationReceiveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationReceiveReply.Merge(m, src)
}
func (m *AttestationReceiveReply) XXX_Size() int {
	return xxx_messageInfo_AttestationReceiveReply.Size(m)
}
func (m *AttestationReceiveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationReceiveReply.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationReceiveReply proto.InternalMessageInfo

func (m *AttestationReceiveReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AttestationReceiveReply) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func init() {
	proto.RegisterType((*OpIntents)(nil), "OpIntents")
	proto.RegisterType((*Transaction)(nil), "Transaction")
	proto.RegisterType((*Signature)(nil), "Signature")
	proto.RegisterType((*Attestation)(nil), "Attestation")
	proto.RegisterType((*SessionStartRequest)(nil), "SessionStartRequest")
	proto.RegisterType((*SessionStartReply)(nil), "SessionStartReply")
	proto.RegisterType((*SessionAckForInitRequest)(nil), "SessionAckForInitRequest")
	proto.RegisterType((*SessionAckForInitReply)(nil), "SessionAckForInitReply")
	proto.RegisterType((*SessionFinishedRequest)(nil), "SessionFinishedRequest")
	proto.RegisterType((*SessionFinishedReply)(nil), "SessionFinishedReply")
	proto.RegisterType((*SessionRequestForInitRequest)(nil), "SessionRequestForInitRequest")
	proto.RegisterType((*SessionRequestForInitReply)(nil), "SessionRequestForInitReply")
	proto.RegisterType((*SessionRequireTransactRequest)(nil), "SessionRequireTransactRequest")
	proto.RegisterType((*SessionRequireTransactReply)(nil), "SessionRequireTransactReply")
	proto.RegisterType((*AttestationReceiveRequest)(nil), "AttestationReceiveRequest")
	proto.RegisterType((*AttestationReceiveReply)(nil), "AttestationReceiveReply")
}

func init() { proto.RegisterFile("uiprpc.proto", fileDescriptor_65695cb26327d0ea) }

var fileDescriptor_65695cb26327d0ea = []byte{
	// 646 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0x92, 0x32, 0x96, 0xdb, 0x74, 0x0c, 0xb3, 0x8f, 0x2c, 0x6b, 0x51, 0xb1, 0x84, 0xd4,
	0x27, 0x4b, 0x94, 0x07, 0x10, 0x02, 0xa1, 0x48, 0x30, 0x34, 0x40, 0x42, 0x72, 0xa6, 0x3d, 0xa0,
	0x89, 0x2a, 0x24, 0x86, 0x59, 0x63, 0x4e, 0x88, 0x5d, 0xb4, 0x49, 0xfc, 0x07, 0xfe, 0x08, 0xbf,
	0x82, 0x5f, 0x86, 0xe2, 0x66, 0x6e, 0xd6, 0x35, 0x55, 0x78, 0xe4, 0xcd, 0xf7, 0x38, 0xf7, 0xf8,
	0xdc, 0x73, 0x77, 0x56, 0xf0, 0xa6, 0x3c, 0x2f, 0xf2, 0x84, 0xe4, 0x45, 0xa6, 0x32, 0xfc, 0x0e,
	0xdc, 0x0f, 0xf9, 0xa1, 0x50, 0x4c, 0x28, 0x89, 0x02, 0x58, 0x4f, 0xb2, 0xd9, 0xd9, 0xb7, 0x86,
	0xce, 0xc8, 0xa3, 0xa6, 0x46, 0x18, 0xbc, 0x94, 0xe5, 0x4c, 0xa4, 0x4c, 0x24, 0x9c, 0x49, 0xdf,
	0xd6, 0xf7, 0xd7, 0x30, 0xfc, 0x13, 0xba, 0x47, 0x45, 0x2c, 0x64, 0x9c, 0x28, 0x9e, 0x09, 0x34,
	0x00, 0x48, 0x4e, 0x63, 0x2e, 0x26, 0xea, 0x32, 0x67, 0xbe, 0x35, 0xb4, 0x46, 0x3d, 0xea, 0x6a,
	0xe4, 0xe8, 0x32, 0x67, 0x68, 0x13, 0x1c, 0x59, 0x24, 0xbe, 0x3d, 0xb4, 0x46, 0x1e, 0x2d, 0x8f,
	0x25, 0x92, 0x4a, 0xe5, 0x3b, 0x33, 0x24, 0x95, 0x0a, 0xed, 0xc0, 0x5a, 0x9a, 0x9d, 0xc7, 0x5c,
	0xf8, 0x1d, 0x0d, 0x56, 0x15, 0x42, 0xd0, 0x39, 0x67, 0x2a, 0xf6, 0x6f, 0x69, 0x54, 0x9f, 0xf1,
	0x7b, 0x70, 0x23, 0xfe, 0x55, 0xc4, 0x6a, 0x5a, 0x30, 0xf4, 0x10, 0x36, 0xe4, 0x55, 0x51, 0x7f,
	0xbf, 0x67, 0x50, 0xad, 0xc1, 0x87, 0xdb, 0xd5, 0x84, 0x95, 0x8e, 0xab, 0x12, 0x27, 0xd0, 0x0d,
	0x95, 0x62, 0x52, 0xc5, 0x7a, 0x96, 0x4d, 0x70, 0x14, 0x4f, 0x2b, 0x92, 0xf2, 0xd8, 0xdc, 0x8a,
	0x46, 0xe0, 0x9a, 0x57, 0x7c, 0x67, 0xe8, 0x8c, 0xba, 0x63, 0x20, 0x46, 0x1a, 0x9d, 0x5f, 0xe2,
	0x97, 0x70, 0x2f, 0x62, 0x52, 0xf2, 0x4c, 0x44, 0x2a, 0x2e, 0x14, 0x65, 0xdf, 0xa7, 0x4c, 0x6a,
	0x82, 0x2c, 0xe7, 0x66, 0x11, 0x96, 0x26, 0x30, 0x6b, 0xa2, 0xf3, 0x4b, 0xfc, 0x04, 0xee, 0x5e,
	0x27, 0xc8, 0xbf, 0x5d, 0xa2, 0x0d, 0xb0, 0xb3, 0x33, 0xdd, 0xb7, 0x4e, 0xed, 0xec, 0xac, 0x34,
	0x8b, 0x8b, 0x2f, 0x99, 0x96, 0xe9, 0x52, 0x7d, 0xc6, 0xbf, 0x2c, 0xf0, 0xab, 0xce, 0x30, 0x39,
	0x3b, 0xc8, 0x8a, 0x43, 0xc1, 0xcd, 0xfb, 0x03, 0x00, 0x39, 0xbb, 0x9b, 0x54, 0x33, 0x7b, 0xd4,
	0xad, 0x90, 0xc3, 0x14, 0x3d, 0x00, 0x6f, 0x2a, 0x59, 0x31, 0x89, 0xd3, 0xb4, 0x60, 0x52, 0x56,
	0xe3, 0x77, 0x4b, 0x2c, 0x9c, 0x41, 0xe8, 0x11, 0x6c, 0xe8, 0x4f, 0xea, 0x3e, 0x58, 0x0b, 0x3e,
	0xf4, 0xca, 0x2f, 0x4c, 0x89, 0x9f, 0xc3, 0xce, 0x12, 0x41, 0x6d, 0xe7, 0x39, 0x32, 0xdd, 0x07,
	0x5c, 0x70, 0x79, 0xca, 0xd2, 0x96, 0xc3, 0xec, 0x83, 0xcb, 0x65, 0x32, 0x29, 0xf7, 0xcc, 0x34,
	0x63, 0x8f, 0xae, 0x73, 0x99, 0x44, 0x65, 0x8d, 0x9f, 0xc1, 0xd6, 0x0d, 0xd6, 0xb6, 0x8a, 0x3e,
	0x42, 0xbf, 0xea, 0xad, 0x94, 0xfc, 0x9b, 0xc9, 0x2b, 0x75, 0x7d, 0x82, 0xa0, 0x81, 0xbb, 0x54,
	0xd7, 0xbf, 0xfe, 0xe7, 0x53, 0xe6, 0x74, 0x0e, 0xb4, 0x0a, 0xf2, 0x09, 0x0c, 0x6a, 0xfc, 0xbc,
	0x60, 0x57, 0xb1, 0x6e, 0x29, 0xbe, 0x0f, 0xb6, 0xba, 0xd0, 0xaa, 0xbb, 0x63, 0x8f, 0xd4, 0xfe,
	0x27, 0x50, 0x5b, 0x5d, 0xe0, 0x10, 0xf6, 0x9b, 0xd8, 0xdb, 0x9a, 0x7b, 0x02, 0x7b, 0xb5, 0x74,
	0x52, 0x96, 0x30, 0xfe, 0x83, 0xb5, 0x14, 0x37, 0x84, 0x4e, 0xac, 0x2a, 0x53, 0x4b, 0x79, 0x75,
	0x22, 0x7d, 0x83, 0x5f, 0xc0, 0xee, 0x32, 0xf6, 0x96, 0xe2, 0xc6, 0xbf, 0x6d, 0x70, 0x8e, 0x5f,
	0x47, 0xe8, 0x29, 0x78, 0xf5, 0x70, 0xa2, 0x2d, 0xb2, 0x24, 0xec, 0x01, 0x22, 0x37, 0x13, 0xfc,
	0xc6, 0xc4, 0x7a, 0x9e, 0x05, 0xb4, 0x47, 0x9a, 0x02, 0x1b, 0xec, 0x92, 0x86, 0xe8, 0x1c, 0x9b,
	0x58, 0x2c, 0x58, 0x8d, 0xee, 0x93, 0x95, 0x1b, 0x0e, 0xfa, 0x64, 0xd5, 0x8e, 0xde, 0x02, 0xba,
	0xe9, 0x10, 0x0a, 0x48, 0xe3, 0x52, 0x02, 0x9f, 0x34, 0x58, 0x3a, 0xfe, 0x63, 0x43, 0xe7, 0x55,
	0x98, 0xe7, 0x28, 0x84, 0x3b, 0x0b, 0x69, 0x43, 0x66, 0xb0, 0x85, 0x54, 0x07, 0xdb, 0x64, 0x69,
	0x30, 0x23, 0xd8, 0x5e, 0x1a, 0x0c, 0x34, 0x20, 0xab, 0xc2, 0x18, 0xec, 0x93, 0x15, 0x79, 0xfa,
	0x0f, 0x4c, 0xfc, 0xbc, 0xa6, 0x7f, 0xce, 0x1f, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xfc,
	0xff, 0xde, 0xde, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VESClient is the client API for VES service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VESClient interface {
	SessionStart(ctx context.Context, in *SessionStartRequest, opts ...grpc.CallOption) (*SessionStartReply, error)
	SessionAckForInit(ctx context.Context, in *SessionAckForInitRequest, opts ...grpc.CallOption) (*SessionAckForInitReply, error)
	SessionRequireTransact(ctx context.Context, in *SessionRequireTransactRequest, opts ...grpc.CallOption) (*SessionRequireTransactReply, error)
	AttestationReceive(ctx context.Context, in *AttestationReceiveRequest, opts ...grpc.CallOption) (*AttestationReceiveReply, error)
}

type vESClient struct {
	cc *grpc.ClientConn
}

func NewVESClient(cc *grpc.ClientConn) VESClient {
	return &vESClient{cc}
}

func (c *vESClient) SessionStart(ctx context.Context, in *SessionStartRequest, opts ...grpc.CallOption) (*SessionStartReply, error) {
	out := new(SessionStartReply)
	err := c.cc.Invoke(ctx, "/VES/SessionStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) SessionAckForInit(ctx context.Context, in *SessionAckForInitRequest, opts ...grpc.CallOption) (*SessionAckForInitReply, error) {
	out := new(SessionAckForInitReply)
	err := c.cc.Invoke(ctx, "/VES/SessionAckForInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) SessionRequireTransact(ctx context.Context, in *SessionRequireTransactRequest, opts ...grpc.CallOption) (*SessionRequireTransactReply, error) {
	out := new(SessionRequireTransactReply)
	err := c.cc.Invoke(ctx, "/VES/SessionRequireTransact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vESClient) AttestationReceive(ctx context.Context, in *AttestationReceiveRequest, opts ...grpc.CallOption) (*AttestationReceiveReply, error) {
	out := new(AttestationReceiveReply)
	err := c.cc.Invoke(ctx, "/VES/AttestationReceive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VESServer is the server API for VES service.
type VESServer interface {
	SessionStart(context.Context, *SessionStartRequest) (*SessionStartReply, error)
	SessionAckForInit(context.Context, *SessionAckForInitRequest) (*SessionAckForInitReply, error)
	SessionRequireTransact(context.Context, *SessionRequireTransactRequest) (*SessionRequireTransactReply, error)
	AttestationReceive(context.Context, *AttestationReceiveRequest) (*AttestationReceiveReply, error)
}

func RegisterVESServer(s *grpc.Server, srv VESServer) {
	s.RegisterService(&_VES_serviceDesc, srv)
}

func _VES_SessionStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).SessionStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/VES/SessionStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).SessionStart(ctx, req.(*SessionStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_SessionAckForInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionAckForInitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).SessionAckForInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/VES/SessionAckForInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).SessionAckForInit(ctx, req.(*SessionAckForInitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_SessionRequireTransact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionRequireTransactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).SessionRequireTransact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/VES/SessionRequireTransact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).SessionRequireTransact(ctx, req.(*SessionRequireTransactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VES_AttestationReceive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttestationReceiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VESServer).AttestationReceive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/VES/AttestationReceive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VESServer).AttestationReceive(ctx, req.(*AttestationReceiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VES_serviceDesc = grpc.ServiceDesc{
	ServiceName: "VES",
	HandlerType: (*VESServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SessionStart",
			Handler:    _VES_SessionStart_Handler,
		},
		{
			MethodName: "SessionAckForInit",
			Handler:    _VES_SessionAckForInit_Handler,
		},
		{
			MethodName: "SessionRequireTransact",
			Handler:    _VES_SessionRequireTransact_Handler,
		},
		{
			MethodName: "AttestationReceive",
			Handler:    _VES_AttestationReceive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uiprpc.proto",
}

// DAppClient is the client API for DApp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DAppClient interface {
	SessionFinished(ctx context.Context, in *SessionFinishedRequest, opts ...grpc.CallOption) (*SessionFinishedReply, error)
	SessionRequestForInit(ctx context.Context, in *SessionRequestForInitRequest, opts ...grpc.CallOption) (*SessionRequestForInitReply, error)
	SessionRequireTransact(ctx context.Context, in *SessionRequireTransactRequest, opts ...grpc.CallOption) (*SessionRequireTransactReply, error)
	AttestationReceive(ctx context.Context, in *AttestationReceiveRequest, opts ...grpc.CallOption) (*AttestationReceiveReply, error)
}

type dAppClient struct {
	cc *grpc.ClientConn
}

func NewDAppClient(cc *grpc.ClientConn) DAppClient {
	return &dAppClient{cc}
}

func (c *dAppClient) SessionFinished(ctx context.Context, in *SessionFinishedRequest, opts ...grpc.CallOption) (*SessionFinishedReply, error) {
	out := new(SessionFinishedReply)
	err := c.cc.Invoke(ctx, "/DApp/SessionFinished", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAppClient) SessionRequestForInit(ctx context.Context, in *SessionRequestForInitRequest, opts ...grpc.CallOption) (*SessionRequestForInitReply, error) {
	out := new(SessionRequestForInitReply)
	err := c.cc.Invoke(ctx, "/DApp/SessionRequestForInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAppClient) SessionRequireTransact(ctx context.Context, in *SessionRequireTransactRequest, opts ...grpc.CallOption) (*SessionRequireTransactReply, error) {
	out := new(SessionRequireTransactReply)
	err := c.cc.Invoke(ctx, "/DApp/SessionRequireTransact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAppClient) AttestationReceive(ctx context.Context, in *AttestationReceiveRequest, opts ...grpc.CallOption) (*AttestationReceiveReply, error) {
	out := new(AttestationReceiveReply)
	err := c.cc.Invoke(ctx, "/DApp/AttestationReceive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DAppServer is the server API for DApp service.
type DAppServer interface {
	SessionFinished(context.Context, *SessionFinishedRequest) (*SessionFinishedReply, error)
	SessionRequestForInit(context.Context, *SessionRequestForInitRequest) (*SessionRequestForInitReply, error)
	SessionRequireTransact(context.Context, *SessionRequireTransactRequest) (*SessionRequireTransactReply, error)
	AttestationReceive(context.Context, *AttestationReceiveRequest) (*AttestationReceiveReply, error)
}

func RegisterDAppServer(s *grpc.Server, srv DAppServer) {
	s.RegisterService(&_DApp_serviceDesc, srv)
}

func _DApp_SessionFinished_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionFinishedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAppServer).SessionFinished(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DApp/SessionFinished",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAppServer).SessionFinished(ctx, req.(*SessionFinishedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DApp_SessionRequestForInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionRequestForInitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAppServer).SessionRequestForInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DApp/SessionRequestForInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAppServer).SessionRequestForInit(ctx, req.(*SessionRequestForInitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DApp_SessionRequireTransact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionRequireTransactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAppServer).SessionRequireTransact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DApp/SessionRequireTransact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAppServer).SessionRequireTransact(ctx, req.(*SessionRequireTransactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DApp_AttestationReceive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttestationReceiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAppServer).AttestationReceive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DApp/AttestationReceive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAppServer).AttestationReceive(ctx, req.(*AttestationReceiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DApp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DApp",
	HandlerType: (*DAppServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SessionFinished",
			Handler:    _DApp_SessionFinished_Handler,
		},
		{
			MethodName: "SessionRequestForInit",
			Handler:    _DApp_SessionRequestForInit_Handler,
		},
		{
			MethodName: "SessionRequireTransact",
			Handler:    _DApp_SessionRequireTransact_Handler,
		},
		{
			MethodName: "AttestationReceive",
			Handler:    _DApp_AttestationReceive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uiprpc.proto",
}
